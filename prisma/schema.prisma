// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SkinDiseases {
  id   String @id @db.VarChar(50)
  name String @unique @db.Text
}

model Categories {
  id           String         @id @db.VarChar(50)
  name         String         @unique @db.Text
  fullArticles FullArticles[]
}

model ArticleThumbnails {
  id           String         @id @db.VarChar(50)
  filename     String         @db.Text
  url          String         @unique @db.Text
  fullArticles FullArticles[]
}

model Articles {
  id           String         @id @db.VarChar(50)
  title        String         @db.Text
  body         String         @db.Text
  fullArticles FullArticles[]
}

model FullArticles {
  articleId   String
  categoryId  String
  thumbnailId String
  assignedAt  DateTime @default(now())

  article   Articles          @relation(fields: [articleId], references: [id])
  category  Categories        @relation(fields: [categoryId], references: [id])
  thumbnail ArticleThumbnails @relation(fields: [thumbnailId], references: [id])

  @@id([articleId, categoryId, thumbnailId])
}

model Levels {
  id              String            @id @db.VarChar(50)
  level           Int               @unique
  name            String            @unique @db.Text
  LevelsSolutions LevelsSolutions[]
}

model Solutions {
  id             String            @id @db.VarChar(50)
  explanation    String            @db.Text
  LevelSolutions LevelsSolutions[]
}

model LevelsSolutions {
  solutionId String
  levelId    String

  solution Solutions @relation(fields: [solutionId], references: [id])
  level    Levels    @relation(fields: [levelId], references: [id])

  @@id([solutionId, levelId])
}
